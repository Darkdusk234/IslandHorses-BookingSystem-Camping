// <auto-generated />
using System;
using BookingSystem_ClassLibrary.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookingSystem_ClassLibrary.Migrations
{
    [DbContext(typeof(CampingDbContext))]
    [Migration("20250521093648_AddedModelStatus")]
    partial class AddedModelStatus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookingSystem_ClassLibrary.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CampSpotId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<bool>("Parking")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("Wifi")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CampSpotId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CampSpotId = 1,
                            CustomerId = 1,
                            EndDate = new DateTime(2025, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfPeople = 2,
                            Parking = false,
                            StartDate = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Wifi = false
                        },
                        new
                        {
                            Id = 2,
                            CampSpotId = 3,
                            CustomerId = 2,
                            EndDate = new DateTime(2025, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfPeople = 4,
                            Parking = false,
                            StartDate = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Wifi = false
                        });
                });

            modelBuilder.Entity("BookingSystem_ClassLibrary.Models.CampSite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("CampSites");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adress = "Solvägen 1",
                            Description = "Skogsnära camping med badsjö",
                            Name = "Solgläntan"
                        },
                        new
                        {
                            Id = 2,
                            Adress = "Strandvägen 2",
                            Description = "Havsnära camping med aktiviteter",
                            Name = "Havsutsikten"
                        });
                });

            modelBuilder.Entity("BookingSystem_ClassLibrary.Models.CampSpot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CampSiteId")
                        .HasColumnType("int");

                    b.Property<bool>("Electricity")
                        .HasColumnType("bit");

                    b.Property<int>("MaxPersonLimit")
                        .HasColumnType("int");

                    b.Property<int?>("SpotTypeId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampSiteId");

                    b.HasIndex("SpotTypeId");

                    b.ToTable("CampSpots");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CampSiteId = 1,
                            Electricity = false,
                            MaxPersonLimit = 4,
                            TypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            CampSiteId = 1,
                            Electricity = true,
                            MaxPersonLimit = 6,
                            TypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            CampSiteId = 2,
                            Electricity = true,
                            MaxPersonLimit = 5,
                            TypeId = 3
                        });
                });

            modelBuilder.Entity("BookingSystem_ClassLibrary.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Varberg",
                            Email = "anna.andersson@example.com",
                            FirstName = "Anna",
                            LastName = "Andersson",
                            PhoneNumber = "0701234567",
                            StreetAddress = "Sommargatan 12",
                            ZipCode = "43245"
                        },
                        new
                        {
                            Id = 2,
                            City = "Halmstad",
                            Email = "bjorn.bergstrom@example.com",
                            FirstName = "Björn",
                            LastName = "Bergström",
                            PhoneNumber = "0739876543",
                            StreetAddress = "Campingvägen 8",
                            ZipCode = "12345"
                        });
                });

            modelBuilder.Entity("BookingSystem_ClassLibrary.Models.SpotType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("Id");

                    b.ToTable("SpotTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Tent",
                            Price = 150m
                        },
                        new
                        {
                            Id = 2,
                            Name = "Caravan",
                            Price = 250m
                        },
                        new
                        {
                            Id = 3,
                            Name = "Cabin",
                            Price = 500m
                        });
                });

            modelBuilder.Entity("BookingSystem_ClassLibrary.Models.Booking", b =>
                {
                    b.HasOne("BookingSystem_ClassLibrary.Models.CampSpot", "CampSpot")
                        .WithMany("Bookings")
                        .HasForeignKey("CampSpotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookingSystem_ClassLibrary.Models.Customer", "Customer")
                        .WithMany("Bookings")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CampSpot");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("BookingSystem_ClassLibrary.Models.CampSpot", b =>
                {
                    b.HasOne("BookingSystem_ClassLibrary.Models.CampSite", "CampSite")
                        .WithMany("CampSpots")
                        .HasForeignKey("CampSiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookingSystem_ClassLibrary.Models.SpotType", "SpotType")
                        .WithMany("CampSpots")
                        .HasForeignKey("SpotTypeId");

                    b.Navigation("CampSite");

                    b.Navigation("SpotType");
                });

            modelBuilder.Entity("BookingSystem_ClassLibrary.Models.CampSite", b =>
                {
                    b.Navigation("CampSpots");
                });

            modelBuilder.Entity("BookingSystem_ClassLibrary.Models.CampSpot", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("BookingSystem_ClassLibrary.Models.Customer", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("BookingSystem_ClassLibrary.Models.SpotType", b =>
                {
                    b.Navigation("CampSpots");
                });
#pragma warning restore 612, 618
        }
    }
}
